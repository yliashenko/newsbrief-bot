from fetcher import fetch_posts_for_channels
from formatter import format_digest
from poster import send_message
from config import GROUP_EMOJIS, MAX_POSTS_PER_REQUEST
from logger import logger

  # –æ–±–º–µ–∂–µ–Ω–Ω—è –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è 413

class DigestThread:
    def __init__(self, category: str, channels: list):
        self.category = category
        self.channels = channels
        self.emoji = GROUP_EMOJIS.get(category, "üìù")

    async def run(self):
        logger.info(f"‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç –ø–æ—Ç–æ–∫—É: {self.category}")
        posts = await fetch_posts_for_channels(self.channels)
        logger.info(f"üì¶ –û—Ç—Ä–∏–º–∞–Ω–æ {len(posts)} –ø–æ—Å—Ç—ñ–≤ —É –ø–æ—Ç–æ—Ü—ñ '{self.category}'")

        # –æ–±—Ä—ñ–∑–∞—î–º–æ, —è–∫—â–æ –ø–æ—Å—Ç—ñ–≤ –±—ñ–ª—å—à–µ –Ω—ñ–∂ –¥–æ–∑–≤–æ–ª–µ–Ω–æ
        if len(posts) > MAX_POSTS_PER_REQUEST:
            logger.warning(f"‚úÇÔ∏è –ó—Ä—ñ–∑–∞–Ω–æ {len(posts) - MAX_POSTS_PER_REQUEST} –ø–æ—Å—Ç—ñ–≤ —á–µ—Ä–µ–∑ –ª—ñ–º—ñ—Ç prompt")
            posts = posts[:MAX_POSTS_PER_REQUEST]

        digest = await format_digest(self.category, posts, self.emoji)

        if digest:
            send_message(digest)
            logger.info(f"üì¨ –î–∞–π–¥–∂–µ—Å—Ç –¥–ª—è '{self.category}' –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ")
        else:
            logger.info(f"‚è≠Ô∏è –ö–∞—Ç–µ–≥–æ—Ä—ñ—è '{self.category}' –Ω–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ (–Ω–µ–º–∞—î –∫–æ–Ω—Ç–µ–Ω—Ç—É –∞–±–æ –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ –ª—ñ–º—ñ—Ç)")