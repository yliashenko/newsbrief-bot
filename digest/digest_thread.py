from digest.fetcher import fetch_posts_for_channels
from config import GROUP_EMOJIS, MAX_POSTS_PER_REQUEST
from shared.logger import logger

class DigestThread:
    def __init__(self, category: str, channels: list, llm_queue):
        self.category = category
        self.channels = channels
        self.emoji = GROUP_EMOJIS.get(category, "üìù")
        self.llm_queue = llm_queue

    async def run(self):
        try:
            logger.info(f"‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç –ø–æ—Ç–æ–∫—É: {self.category}")
            posts = await fetch_posts_for_channels(self.channels)
            logger.info(f"üì¶ –û—Ç—Ä–∏–º–∞–Ω–æ {len(posts)} –ø–æ—Å—Ç—ñ–≤ —É –ø–æ—Ç–æ—Ü—ñ '{self.category}'")

            if len(posts) > MAX_POSTS_PER_REQUEST:
                logger.warning(f"‚úÇÔ∏è –ó—Ä—ñ–∑–∞–Ω–æ {len(posts) - MAX_POSTS_PER_REQUEST} –ø–æ—Å—Ç—ñ–≤ —á–µ—Ä–µ–∑ –ª—ñ–º—ñ—Ç prompt")
                posts = posts[:MAX_POSTS_PER_REQUEST]

            for post in posts:
                await self.llm_queue.put({
                    "category": self.category,
                    "post": post,
                    "emoji": self.emoji
                })
        except Exception as e:
            logger.error(f"üî• [{self.category}] –ü–æ–º–∏–ª–∫–∞ —É DigestThread: {e}")